  
  >Laws of computer programming< 
  
 *any given program, when running, is obsolete. 
  
 *If a program is useless, it will have to be documented. 
  
 *If a program is useful, it will have to be changed. 
  
 *Any program will expand to fill all available memory. 
   
 *The value of a program is proportional to the wieght of it's output. 
  
 *Program complexity grows until it exeeds the capability of the programmer to
maintain it. 
  
 *Make it possible for programmers to write in English and you will find out
that programmers can't write in English. 
   
  <Weinberg's Law< 
  
 *If builder built buildings the way programmers wrote programs, the first
woodpecker that came along would destroy civilization. 
  
 >Hare's law of large programs< 
  
 *Inside all large programs is a small program struggling to get out. 
  
 >Troutman's programming laws< 
  
 *If a test installation functions perfectly, all subsequent systems will
malfunction. 
  
 *Not untill a program has been in production for six months will the most
harmfull error then be discovered. 
  
 *Job controll cards that cannot be arranged in improper order will be. 
  
 *interchangeable tapes wont. 
  
 *If the input editor has been designed to reject all bad data, some ingenious
idiot will discover a method to get bad data past it. 
  
 *Machines work, people should think. 
  
 >Golub's laws of computerdom< 
  
 *A carelessly planned project takes three times longer to complete than
expected; a carefully planned project will only take twice as long. 
  
 *The effort required to correct the error increases geometrically with time. 
  
 >Bradley's Bromide< 
  
 *If computers get too powerful, we can organize them into a committee - that
will do them in. 

